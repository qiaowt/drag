1、圣杯布局
2、ie的兼容性
3、跨域
4、javascript数据类型
5、jsonp原理
6、盒子模型
7、http状态码
8、javascript模块化
9、javascript模块化工具


1、语义化的理解？
    根据内容的结构化（内容语义化），选择合适的标签（代码语义化）便于开发者阅读和写出更优雅的代码的同时让浏览器的爬虫和机器很好地解析。

2、语义化的好处？
    用户体验：例如title、alt用于解释名词或解释图片信息、label标签的活用；
    有利于SEO：和搜索引擎建立良好沟通，有助于爬虫抓取更多的有效信息：爬虫依赖于标签来确定上下文和各个关键字的权重；
    方便其他设备解析（如屏幕阅读器、盲人阅读器、移动设备）以意义的方式来渲染网页；
    便于团队开发和维护，语义化更具可读性，可以减少差异化。

3、W3C网页标准是什么？
    网页是由三部分组成：结构、表现、行为

4、Jsonp的原理？
    动态添加一个<script>标签，而script标签的src属性是没有跨域的限制的。这样说来，这种跨域方式其实与ajax XmlHttpRequest协议无关了。

5、闭包？
    javascript允许使用内部函数---即函数定义和函数表达式位于另一个函数的函数体内。而且，这些内部函数可以访问它们所在的外部函数中声明的所有局部变量、参数和声明的其他内部函数。当其中一个这样的内部函数在包含它们的外部函数之外被调用时，就会形成闭包。

6、闭包的好处和坏处？
    好处：实现封装，防止变量跑到外层作用域中，发生命名冲突。
    坏处：内存消耗，会导致内存泄漏问题
          性能问题，会涉及到跨作用域访问，每次访问会导致性能问题

7、面向对象继承？
    原型链继承：
               function Parent(){} 
               function Child(){} 
               Child.prototype = new Parent(); 
               Child.prototype.constructor = Child; 
               var child = new Child(); 
               alert(child.constructor);//function Parent(){} 
               alert(child instanceof Child);//true 

8、常用设计模式？
    单例模式
    简单工厂模式

9、常用MVC框架？
    Javascript MVC――优点：可靠的社区；缺点：基于字符串的继承模型很差，控制器与视图关系过密而缺少绑定。
    Angular.js――优点：对模板范围和控制器设计有很好的考虑，拥有依赖注入系统，支持丰富的UI绑定语法。缺点：代码的模块性不强，视图的模块化也不够。Angular.js――优点：对模板范围和控制器设计有很好的考虑，拥有依赖注入系统，支持丰富的UI绑定语法。缺点：代码的模块性不强，视图的模块化也不够。

10、AJax实现原理和工作方法？
    Ajax的原理简单来说通过XmlHttpRequest对象来向服务器发异步请求，从服务器获得数据，然后用javascript来操作DOM而更新页面。
    Ajax的工作方法：
                   1）创建XMLHttpRequest（）对象
                   2）通过open（）打开方式
                   3）用send（）发送数据
                   4）onreadystatechange接收数据
11、AJax的优点和缺点？
    优点：页面无刷新，更好的用户体验
          使用异步方式与服务器通信，不需要打断用户的操作，具有更加迅速的响应能力
          “按需取数据”，可以最大程度的减少冗余请求，和响应对服务器造成的负担。
    缺点：不能实现跨域请求

12、javscript的svg和canvas区别？
    Canvas适用场景
      Canvas提供的功能更原始，适合像素处理，动态渲染和大数据量绘制
    SVG适用场景
      SVG功能更完善，适合静态图片展示，高保真文档查看和打印的应用场景

13、angularJs五大特性？
    1）良好的应用程序结构：
          使用 AngularJS，您可以通过MVC（模型 - 视图 - 控制器）或MVVM （模型 - 视图 - 视图模型）模式来组织源代码。 AngularJS 是一个 MVW 框架，其中W代表可以用于任何项目。你可以组织你的代码模块，它可显著提高应用程序的可测试性和可维护性。
    2）双向数据绑定
         数据绑定肯定是 AngularJS 最佳功能之一。你可以声明绑定的模型到 HTML 元素。当模型发生变化时，视图会自动更新，反之亦然。这可以减少大量的传统样板代码，保持模型和视图同步。
    3）指令：
         AngularJS 指令让你使用 HTML 新语法快速的构建应用程序。您可以创建可重用的自定义组件与指令的API。
    4）HTML模板：
         AngularJS 使用 HTML 模板，这使事情变得简单，并允许设计人员和开发人员同时工作。设计人员可以按照通常的方式创建用户界面，而开发人员可以使用声明性绑定语法很容易配合不同的UI组件的数据模型。
    5）可嵌入、注入：
         AngularJS 支持依赖注入的开箱即用。如果你需要的东西，你只要调用 Angular 来注入。就这么简单。这巨大的提高可测试性，因为你可以很容易地在测试的模拟组件。

14、Bootstrap的特点？
    